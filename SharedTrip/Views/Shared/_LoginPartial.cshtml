@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService userService

<ul class="navbar-nav ml-auto mt-10">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @if (await userService.GetUserFullNameAsync(this.User.Id()) is var fullName && fullName != null)
        {
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Details" title="Manage">Hello, @fullName!</a>
        }
        else
        {
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Details" title="Manage">Hello, @User.Identity?.Name!</a>
        }
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link login-button">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link login-button" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link login-button" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>